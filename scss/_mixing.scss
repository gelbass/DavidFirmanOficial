@use 'sass:map';
@use 'sass:meta';
@use "_variables" as *;

@mixin containers($width: 100%,$height: 100dvh,$display:null,$gap:0px,$padding:0px,$direction: column,$justify: center,$align: center) {
    width: $width;
    height: $height;
    display: $display;
    gap: $gap;
    padding: $padding;

    @if $display != null {
      display: $display;
    }

    @if $display == "flex"{
      flex-direction: $direction;
      justify-content: $justify;
      align-items: $align;
    }
}

@mixin container_img($url) {
  background-image: url($url);
  background-size: cover;
  background-position: center;
}
@mixin text($font,$size,$color,$style:normal,$weight:400,$height:normal){
    font-family: $font;
    font-size: $size !important;
    color: $color !important;
    font-style: $style;
    font-weight: $weight;
    line-height: $height;
    margin: 0px;
}
@mixin button($width: 100%, $height: 50px, $border-radius: 40px,$background: $colorButton, $color: $colorTextB,$font-size:20px, $hover-color-bg: $colorButtonHover,$hover-color-tx: $colorTextN) {
    width: $width !important;
    height: $height !important;
    background-color: $background !important;
    color: $color !important;
    font-size: $font-size !important;
    border-radius: $border-radius !important;
    border: none !important;
    cursor: pointer !important;

    &:hover {
        background-color: $hover-color-bg !important;
        color: $hover-color-tx !important;
    }
}
@mixin respond-between($min, $max) {
  $min-width: map.get($breakpoints, $min);
  $max-width: map.get($breakpoints, $max);
  $max-width-nonoverlap: if(meta.type-of($max-width) == 'number', $max-width - 0.02px, $max-width);
  @if $min-width and $max-width {
    @media (min-width: #{$min-width}) and (max-width: #{$max-width-nonoverlap}) {
      @content;
    }
  } @else {
    @warn "Uno o ambos de los puntos de quiebre '#{$min}' o '#{$max}' no existen en el mapa.";
  }
}

